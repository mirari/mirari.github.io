import{_ as d}from"./ValaxyMain.vue_vue_type_style_index_0_lang-BWN6FZjJ.js";import{f as k,w as e,e as u,A as m,ag as h,o as g,a,H as s,U as i}from"./app-O6veFoRw.js";import"./YunComment.vue_vue_type_style_index_0_lang-BdmCVZ97.js";import"./index-C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-6OskRlK9.js";import"./post-CxZOEfth.js";const B={__name:"2021-07-28-pitfalls_of_setting_up_ios_development_environment_on_m1_chip_mac",setup(b,{expose:p}){const t=JSON.parse('{"title":"M1芯片Mac搭建ios开发环境踩坑","description":"","frontmatter":{"title":"M1芯片Mac搭建ios开发环境踩坑","categories":["学习笔记"],"tags":["iOS","MacOS","xcode"],"date":"2021-07-28 10:20:47"},"headers":[{"level":3,"title":"homebrew","slug":"homebrew","link":"#homebrew","children":[]},{"level":3,"title":"fastlane","slug":"fastlane","link":"#fastlane","children":[]},{"level":3,"title":"cocoapods","slug":"cocoapods","link":"#cocoapods","children":[]},{"level":3,"title":"M1芯片的arm64模拟器","slug":"m1芯片的arm64模拟器","link":"#m1芯片的arm64模拟器","children":[]}],"relativePath":"pages/posts/2021-07-28-pitfalls_of_setting_up_ios_development_environment_on_m1_chip_mac.md","path":"/home/runner/work/blog/blog/pages/posts/2021-07-28-pitfalls_of_setting_up_ios_development_environment_on_m1_chip_mac.md","lastUpdated":1733198069000}'),r=m(),n=t.frontmatter||{};return r.meta.frontmatter=Object.assign(r.meta.frontmatter||{},t.frontmatter||{}),h("pageData",t),h("valaxy:frontmatter",n),globalThis.$frontmatter=n,p({frontmatter:{title:"M1芯片Mac搭建ios开发环境踩坑",categories:["学习笔记"],tags:["iOS","MacOS","xcode"],date:"2021-07-28 10:20:47"}}),(l,o)=>{const c=d;return g(),k(c,{frontmatter:u(n)},{"main-content-md":e(()=>o[0]||(o[0]=[a("p",null,"除了能在AppStore下到或者可以轻易获取的工具，我的iOS开发环境还需要以下环境支持：",-1),a("ul",null,[a("li",null,"homebrew"),a("li",null,"cocoapods"),a("li",null,"fastlane"),a("li",null,"xcode的arm64模拟器")],-1),a("h3",{id:"homebrew",tabindex:"-1"},[s("homebrew "),a("a",{class:"header-anchor",href:"#homebrew","aria-label":'Permalink to "homebrew"'},"​")],-1),a("p",null,[s("原始的写法因为无法访问"),a("code",null,"raw.githubusercontent.com"),s("，可能导致安装卡住或者失败。")],-1),a("p",null,"经过一番踩坑，最终找到了这个网站：",-1),a("p",null,[a("a",{href:"https://brew.idayer.com/",target:"_blank",rel:"noreferrer"},"https://brew.idayer.com/")],-1),a("p",null,"使用以下命令分别安装arm版和x86版的homebrew：",-1),a("div",{class:"language-bash vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"bash"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"/bin/bash"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -c"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "$('),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"curl"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -fsSL"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)"')])])]),a("button",{class:"collapse"})],-1),a("div",{class:"language-bash vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"bash"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"arch"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -x86_64"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /bin/bash"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -c"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "$('),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"curl"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -fsSL"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)"')])])]),a("button",{class:"collapse"})],-1),a("p",null,[s("arm版会被安装到"),a("code",null,"/opt/homebrew/bin/brew"),s("目录，x86版会被安装到"),a("code",null,"/usr/local/bin/brew"),s("目录。")],-1),a("p",null,"安装成功后，会有提示需要手动执行一段脚本：",-1),a("div",{class:"language-bash vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"bash"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"echo"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},` 'eval "$(/opt/homebrew/bin/brew shellenv)"'`),a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >>"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ~/.zprofile")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"eval"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "$('),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"/opt/homebrew/bin/brew"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' shellenv)"')])])]),a("button",{class:"collapse"})],-1),a("p",null,"可以手动编辑用户根目录下的.zprofile文件，确保含有如下内容：",-1),a("div",{class:"language-bash vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"bash"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"eval"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "$('),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"/opt/homebrew/bin/brew"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' shellenv)"')]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," HOMEBREW_BOTTLE_DOMAIN"),a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"https://mirrors.ustc.edu.cn/homebrew-bottles/bottles")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"alias"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," abrew"),a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'arch -arm64 /opt/homebrew/bin/brew'")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"alias"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ibrew"),a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'arch -x86_64 /usr/local/bin/brew'")])])]),a("button",{class:"collapse"})],-1),a("p",null,[s("保存后再执行"),a("code",null,"source ~/.zprofile"),s("刷新配置。")],-1),a("p",null,[s("此时，输入"),a("code",null,"brew -v"),s("、"),a("code",null,"ibrew -v"),s("、"),a("code",null,"abrew -v"),s("可以看到如下信息：")],-1),a("div",{class:"language- vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"}),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",null,"mirari@MBA ~ % brew -v")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew 3.2.4")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew/homebrew-core (git revision 64a2874e87; last commit 2021-07-27)")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew/homebrew-cask (git revision 9d5abe6a67; last commit 2021-07-27)")]),s(`
`),a("span",{class:"line"},[a("span",null,"mirari@MBA ~ % ibrew -v")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew 3.2.5")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew/homebrew-core (git revision 507807b9dc; last commit 2021-07-27)")]),s(`
`),a("span",{class:"line"},[a("span",null,"mirari@MBA ~ % abrew -v")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew 3.2.4")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew/homebrew-core (git revision 64a2874e87; last commit 2021-07-27)")]),s(`
`),a("span",{class:"line"},[a("span",null,"Homebrew/homebrew-cask (git revision 9d5abe6a67; last commit 2021-07-27)")])])]),a("button",{class:"collapse"})],-1),a("p",null,"说明安装正常。",-1),a("p",null,"之前可能因为网络等原因，我的homebrew虽然安装成功了，但安装大多数工具，比如bob和fastlane，都会提示找不到叫这个名字的工具。",-1),a("p",null,[s("错误信息为"),a("code",null,"Could not resolve HEAD to a revision"),s("。")],-1),a("p",null,[s("使用"),a("code",null,"brew -v"),s("可以看到，homebrew-core没有HEAD。")],-1),a("p",null,"执行以下命令可以修复：",-1),a("div",{class:"language-bash vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"bash"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -C"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $("),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"brew"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --repository"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," homebrew/core"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"reset"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --hard"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," HEAD.")])])]),a("button",{class:"collapse"})],-1),a("p",null,"但是为了稳妥起见，我还是rm -rf了两个brew的目录重新安装了一遍。",-1),a("h3",{id:"fastlane",tabindex:"-1"},[s("fastlane "),a("a",{class:"header-anchor",href:"#fastlane","aria-label":'Permalink to "fastlane"'},"​")],-1),a("p",null,[s("homebrew安装成功后，直接运行"),a("code",null,"brew install fastlane"),s("即可安装成功。")],-1),a("h3",{id:"cocoapods",tabindex:"-1"},[s("cocoapods "),a("a",{class:"header-anchor",href:"#cocoapods","aria-label":'Permalink to "cocoapods"'},"​")],-1),a("p",null,[s("之前有段文字提示brew上的cocoapods已经停止更新，需要改用gem安装，现在去看已经没有了，brew上直接运行"),a("code",null,"brew install cocoapods"),s("即可。")],-1),a("h3",{id:"m1芯片的arm64模拟器",tabindex:"-1"},[s("M1芯片的arm64模拟器 "),a("a",{class:"header-anchor",href:"#m1芯片的arm64模拟器","aria-label":'Permalink to "M1芯片的arm64模拟器"'},"​")],-1),a("p",null,"这是最坑的部分。",-1),a("p",null,"新鲜出炉的M1环境xcode在运行以前的老项目时，遇到了一堆问题，比如这样的错误信息：",-1),a("div",{class:"language- vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"}),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",null,"building for iOS Simulator-x86_64 but attempting to link with file built for iOS Simulator-arm64")])])]),a("button",{class:"collapse"})],-1),a("p",null,"或者提示找不到对应的Framework，或者提示在当前arch下当前的Symbol无法识别。",-1),a("h4",{id:"解决方案1",tabindex:"-1"},[s("解决方案1： "),a("a",{class:"header-anchor",href:"#解决方案1","aria-label":'Permalink to "解决方案1："'},"​")],-1),a("blockquote",null,[a("p",null,"在访达的应用程序列表中，找到xcode，右键选择显示简介，然后勾选“使用Rosetta打开”。")],-1),a("p",null,"简单粗暴无脑。这样启动的xcode，模拟器就是x86的了，完美适配x86环境。包括那些没有在xcframework的模拟器里编译arm64的依赖都可以正常运行。",-1),a("p",null,"但是xcode的执行效率会受影响，我不能接受。",-1),a("p",null,"顺带一提，直接从官网下载的Mac版IntelliJ IDEA就是x86版的，在M1环境下运行卡顿很严重，用了一天整个人都难受了，插件Power Mode II的打字特效掉帧严重，不得不关闭。需要在官网下载前，点击下载按钮右侧切换到arm版，从此丝般顺滑。",-1),a("p",null,[s("我自己制作的xcframework包在模拟器环境同时包含了"),a("code",null,"x86_64"),s("和"),a("code",null,"arm64"),s("（谷歌就是这样），要是M1芯片还跑x86，不是媚眼抛给瞎子看？")],-1),a("p",null,"但是要让项目在arm64下跑起来，配置也不容易，经过一番尝试，解决方案大致如下：",-1),a("h4",{id:"解决方案2",tabindex:"-1"},[s("解决方案2： "),a("a",{class:"header-anchor",href:"#解决方案2","aria-label":'Permalink to "解决方案2："'},"​")],-1),a("p",null,"这里涉及3个编译目标，分别是：",-1),a("ul",null,[a("li",null,"pod依赖的第三方库Target，包括源码和Framework"),a("li",null,"本地用于编译Framework的自有库源码Target"),a("li",null,"调用以上依赖并运行在模拟器或真机上的应用Target")],-1),a("h5",{id:"运行在模拟器或真机上的应用target",tabindex:"-1"},[s("运行在模拟器或真机上的应用Target "),a("a",{class:"header-anchor",href:"#运行在模拟器或真机上的应用target","aria-label":'Permalink to "运行在模拟器或真机上的应用Target"'},"​")],-1),a("p",null,"首先确保用于调用Framework和运行模拟器的应用项目Target本身的Build Settings配置如下：",-1),a("ul",null,[a("li",null,[s("Architectures为默认值"),a("code",null,"$(ARCHS_STANDARD)")])],-1),a("p",null,[s("在M1芯片下，模拟器的默认值应该是"),a("code",null,"arm64"),s(", "),a("code",null,"armv7")],-1),a("ul",null,[a("li",null,"Build Active Architecture Only的Debug为Yes(前提是模拟器用Debug方式运行)")],-1),a("p",null,"这一步的作用是让模拟器编译目标时只编译arm64的代码，不要尝试x86等arch的编译。因为它依赖的pod和自有库的arch会被指定为只有一个arm64，如果尝试其他arch编译就会报错。",-1),a("ul",null,[a("li",null,"删除Excluded Architectures")],-1),a("p",null,"这一步的作用是让pod来管理此项参数，不要手动设置值。手动设置这项值时，pod安装会有一段警告提示。",-1),a("div",{class:"language- vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"}),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",null,"[!] The `Demo [Debug]` target overrides the `EXCLUDED_ARCHS[sdk=iphonesimulator*]` build setting defined in `../Pods/Target Support Files/Pods-Demo/Pods-Demo.debug.xcconfig'. This can lead to problems with the CocoaPods installation")]),s(`
`),a("span",{class:"line"},[a("span",null,"    - Use the `$(inherited)` flag, or")]),s(`
`),a("span",{class:"line"},[a("span",null,"    - Remove the build settings from the target.")])])]),a("button",{class:"collapse"})],-1),a("ul",null,[a("li",null,"删除Valid Architectures")],-1),a("p",null,"xcode12的新项目应该默认移除了此项参数。新版xcode不再需要用这个参数来指定archs。",-1),a("h5",{id:"pod依赖的第三方库target",tabindex:"-1"},[s("pod依赖的第三方库Target "),a("a",{class:"header-anchor",href:"#pod依赖的第三方库target","aria-label":'Permalink to "pod依赖的第三方库Target"'},"​")],-1),a("p",null,"在podfile中添加钩子",-1),a("div",{class:"language-yaml vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"yaml"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"post_install do |installer|")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"  installer.pods_project.targets.each do |target|")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    target.build_configurations.each do |config|")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    end")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"  end")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"end")])])]),a("button",{class:"collapse"})],-1),a("p",null,"因为手动在xcode里修改pod的project是没用的，pod install一执行，一切修改都会还原。因此需要用钩子来处理pod安装的配置项。",-1),a("p",null,"这一步的作用是让pod在编译时编译所有archs，也就是包括了x86和arm64.",-1),a("p",null,[s("之所以要这样做，是因为模拟器环境的pod安装时仍然会把开源的依赖以x86形式编译(我推测)，也就导致了上面那个"),a("code",null,"building for iOS Simulator-x86_64 but attempting to link with file built for iOS Simulator-arm64"),s("错误。因此我们用这段语句让pod强制编译所有arch。")],-1),a("h5",{id:"本地用于编译framework的自有库源码target",tabindex:"-1"},[s("本地用于编译Framework的自有库源码Target "),a("a",{class:"header-anchor",href:"#本地用于编译framework的自有库源码target","aria-label":'Permalink to "本地用于编译Framework的自有库源码Target"'},"​")],-1),a("p",null,"其余配置参考上面的应用Target，但是Build Active Architecture Only这一项需要改为NO，也就是手动操作了上面pod的那段配置。",-1),a("p",null,[a("strong",null,"最后，记得删除pods目录，删除项目缓存，然后再执行编译。")],-1),a("h4",{id:"解决方案3",tabindex:"-1"},[s("解决方案3 "),a("a",{class:"header-anchor",href:"#解决方案3","aria-label":'Permalink to "解决方案3"'},"​")],-1),a("p",null,"其他操作都类似方案2，但是将pod和自有库的那个Build Active Architecture Only配置项，改为操作Excluded Architectures。具体操作为：",-1),a("h5",{id:"pod依赖的第三方库target-1",tabindex:"-1"},[s("pod依赖的第三方库Target "),a("a",{class:"header-anchor",href:"#pod依赖的第三方库target-1","aria-label":'Permalink to "pod依赖的第三方库Target"'},"​")],-1),a("p",null,"在podfile中添加钩子",-1),a("div",{class:"language-yaml vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"yaml"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[a("code",{"v-pre":""},[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"post_install do |installer|")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"  installer.pods_project.build_configurations.each do |config|")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"')]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"  end")]),s(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"end")])])]),a("button",{class:"collapse"})],-1),a("h5",{id:"本地用于编译framework的自有库源码target-1",tabindex:"-1"},[s("本地用于编译Framework的自有库源码Target "),a("a",{class:"header-anchor",href:"#本地用于编译framework的自有库源码target-1","aria-label":'Permalink to "本地用于编译Framework的自有库源码Target"'},"​")],-1),a("p",null,"Debug下的Build Active Architecture Only保持YES，但是Excluded Architectures设置为arm64。",-1),a("p",null,"这一步的作用是让Pod依赖和自有库模拟器编译时，排除arm64。",-1),a("p",null,[s("出处："),a("a",{href:"https://stackoverflow.com/a/63955114/6096307",target:"_blank",rel:"noreferrer"},"https://stackoverflow.com/a/63955114/6096307")],-1),a("p",null,"按理说这样arm64的模拟器运行时应该会报错，但是实际上确实可以执行，我也不知道为什么了╮(╯▽╰)╭",-1),a("p",null,"不过虽然应用本身能正常运行，但自有库还需要在打包时包含所有的archs。之前在pod里面过滤了arm64，如果自有库依赖了pod中的有源码的开源库，就会导致编译打包时丢失arm64的arch，从而报错。因此如果项目本身是单纯的应用，使用方案3排除arm64会更节省资源，编译更快速。如果是工具库，就得使用方案2，编译所有archs。",-1)])),"main-header":e(()=>[i(l.$slots,"main-header")]),"main-header-after":e(()=>[i(l.$slots,"main-header-after")]),"main-nav":e(()=>[i(l.$slots,"main-nav")]),"main-content":e(()=>[i(l.$slots,"main-content")]),"main-content-after":e(()=>[i(l.$slots,"main-content-after")]),"main-nav-before":e(()=>[i(l.$slots,"main-nav-before")]),"main-nav-after":e(()=>[i(l.$slots,"main-nav-after")]),comment:e(()=>[i(l.$slots,"comment")]),footer:e(()=>[i(l.$slots,"footer")]),aside:e(()=>[i(l.$slots,"aside")]),"aside-custom":e(()=>[i(l.$slots,"aside-custom")]),default:e(()=>[i(l.$slots,"default")]),_:3},8,["frontmatter"])}}};export{B as default};
